user nginx nginx;

worker_processes 2;
error_log /var/log/nginx/error.log;
worker_rlimit_nofile 8192;
#worker_rlimit_nofile 1000000;
pid       logs/nginx.pid;
events {
    worker_connections 4096;
}

http {
    # your code goes here ...
 include /etc/nginx/conf.d/default.conf
server {
    listen 80;
    server_name 172.31.21.76; #host server from EC2 private ip
    root /usr/share/nginx/html;
   # return 301 https://$server_name$request_uri;

    location / {
        proxy_pass http://my_app_1:8000/;
        proxy_set_header Host "172.31.21.76";
   }

 }


server {
    
  #enable SSl
      listen 443 ssl;
      listen [::]:443 ssl;
      server_name 172.31.21.76:443;
      ssl_certificate  /nginx-files/files/localhost.crt;
       ssl_certificate_key  /nginx-files/files/localhost.key;
      
#include /nginx-files/files/ssl-params.conf;
      # ssl_session_timeout 5m;
            ssl_ciphers         HIGH:!aNULL:!MD5;

#SSLEngine on
#SSLUseStapling On
#SSLStaplingCache "shmcb:logs/ssl_stapling(32768)"

      location / {
 #            https_proxy = http://my_app_1:8000/;
             proxy_pass http://my_app_1:8000/;
             proxy_set_header Host "172.31.21.76:443";
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;





#        try_files $uri $uri / = 404;
    #    }

#<VirtualHost *:443>
#    DocumentRoot " http://my_app_1:8000/"  
#    ServerName  172.31.21.76;
#    SSLEngine on
#    SSLCertificateFile "/nginx-files/files/localhost.crt"
#    SSLCertificateKeyFile "/nginx-files/files/localhost.key"
#</VirtualHost>

       }
}
